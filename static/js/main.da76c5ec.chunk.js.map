{"version":3,"sources":["components/Notification/Notification.module.css","transitions/fade.module.css","components/TabletShape/TabletShape.module.css","components/PopUpNotification/PopUpNotification.module.css","transitions/slide-reverse.module.css","components/ContactForm/ContactForm.module.css","transitions/slide.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","redux/actions.js","redux/selectors.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","redux/operations.js","components/ContactItem/ContactItem.js","components/ContactItem/ContactItemContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/Header/Header.js","components/TabletShape/TabletShape.js","components/PopUpNotification/PopUpNotification.js","components/App.js","components/AppContainer.js","redux/reducer.js","redux/store.js","index.js","components/Filter/Filter.module.css","components/Header/Header.module.css"],"names":["module","exports","addContactAction","createAction","name","number","payload","id","uuidv4","deleteContactAction","loadPersistedContacts","onExistFlagAction","offExistFlagAction","changeFilterAction","getAllContacts","state","contacts","getFilteredContacts","createSelector","filter","item","toLowerCase","includes","getExistContactFlag","notification","isContactAlreadyExist","Notification","title","className","styles","defaultProps","rules","messages","ContactForm","errors","InputNameId","InputNuberId","handleChange","e","target","value","replaceValue","replace","match","exec","shift","join","setState","resetForm","hasContact","props","some","handleSubmit","preventDefault","addContact","showNotification","validateAll","then","catch","formatedErrors","forEach","error","field","message","this","onSubmit","form","htmlFor","input","type","onChange","autoComplete","maxLength","inputContainer","button","Component","connect","dispatch","setTimeout","ContactItem","contactItem","onDeleteContact","container","numberInfo","buttonDelete","onClick","ContactList","filteredContacts","length","TransitionGroup","component","contactList","map","CSSTransition","timeout","unmountOnExit","classNames","slideTransition","key","Filter","hanleFilterChange","currentTarget","Header","useState","isPageLoaded","setstate","useEffect","header","in","fadeTransition","TabletShape","children","screen","popUpNotification","App","persistedContacts","localStorage","getItem","loadContactsFromLS","JSON","parse","prevState","setItem","stringify","isAlreadyinContacts","slideReverseTransition","PopUpNotification","contactsReducer","createReducer","action","contact","notificationReducer","rootReducer","combineReducers","middlewares","ReduxThunk","store","configureStore","reducer","middleware","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da76c5ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2TUHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__33K5H\",\"enterActive\":\"fade_enterActive__3u07V\",\"exit\":\"fade_exit__2ZM8v\",\"exitActive\":\"fade_exitActive__2uHXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"TabletShape_screen__3ynfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PopUpNotification_container__16pUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-reverse_enter__ax1hJ\",\"enterActive\":\"slide-reverse_enterActive__17IKd\",\"exit\":\"slide-reverse_exit__1MoVR\",\"exitActive\":\"slide-reverse_exitActive__2sDyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3y4YQ\",\"form\":\"ContactForm_form__3Pj-6\",\"input\":\"ContactForm_input__3F5HH\",\"inputContainer\":\"ContactForm_inputContainer__3ibJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__4AqI4\",\"enterActive\":\"slide_enterActive__DKzqO\",\"exit\":\"slide_exit__vFtOy\",\"exitActive\":\"slide_exitActive__1e9NR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactItem_container__CzZEQ\",\"buttonDelete\":\"ContactItem_buttonDelete__3Lsm-\",\"numberInfo\":\"ContactItem_numberInfo__2gzFM\",\"name\":\"ContactItem_name__2uM7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__3AVwO\",\"contactList\":\"ContactList_contactList__2dejv\",\"contactItem\":\"ContactList_contactItem__fadsr\",\"title\":\"ContactList_title__18PrS\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContactAction = createAction('ADD_CONTACT', (name, number) => ({\n  payload: { name, number, id: uuidv4() },\n}));\n\nexport const deleteContactAction = createAction('DELETE_CONTACT');\n\nexport const loadPersistedContacts = createAction('LOAD_PERSISTED_CONTACT');\n\nexport const onExistFlagAction = createAction('ON_FLAG_EXIST');\n\nexport const offExistFlagAction = createAction('OFF_FLAG_EXIST');\n\nexport const changeFilterAction = createAction('CHANGE_EDITOR');\n","import { createSelector } from 'reselect';\n\nexport const getAllContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector([getAllContacts, getFilter], (contacts, filter) =>\n  contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase())),\n);\n\nexport const getExistContactFlag = state => state.notification.isContactAlreadyExist;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ title }) => <span className={styles.Notification}>{title}</span>;\n\nNotification.defaultProps = {\n  title: null,\n};\n\nNotification.propTypes = {\n  title: propTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { validateAll } from 'indicative/validator';\nimport Notification from '../Notification/Notification';\nimport styles from './ContactForm.module.css';\n\nconst rules = {\n  name: 'required | string',\n  number: 'required|min:2',\n};\n\nconst messages = {\n  'name.required': 'Please choose a name for contact',\n  'number.required': 'Please enter a number',\n  'number.min': 'Number must be at least 2 characters',\n};\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    errors: null,\n  };\n\n  InputNameId = uuidv4();\n\n  InputNuberId = uuidv4();\n\n  handleChange = e => {\n    const { value, name } = e.target;\n    let replaceValue = value;\n\n    if (name === 'number') {\n      replaceValue = value.replace(/[^\\d]/g, '');\n\n      const regex = /^([^\\s]{3})([^\\s]{3})([^\\s]{2})([^\\s]{2})$/g;\n      const match = regex.exec(replaceValue);\n      if (match) {\n        match.shift();\n        replaceValue = match.join('-');\n      }\n    }\n\n    this.setState({\n      [name]: replaceValue,\n    });\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n      errors: null,\n    });\n  };\n\n  hasContact = name => {\n    const { contacts } = this.props;\n    return contacts.some(item => item.name.toLowerCase() === name.toLowerCase());\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { addContact, showNotification } = this.props;\n\n    const { name, number } = this.state;\n\n    validateAll({ name, number }, rules, messages)\n      .then(() => {\n        const isContactExist = this.hasContact(name);\n\n        if (isContactExist) {\n          showNotification();\n        } else {\n          addContact(name, number);\n          this.resetForm();\n        }\n      })\n      .catch(errors => {\n        const formatedErrors = {};\n        errors.forEach(error => {\n          formatedErrors[error.field] = error.message;\n        });\n        this.setState({\n          errors: formatedErrors,\n        });\n      });\n  };\n\n  render() {\n    const { name, number, errors } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <div>\n            <label htmlFor={this.InputNameId}>Name:</label>\n            <input\n              className={styles.input}\n              name=\"name\"\n              id={this.InputNameId}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={name}\n              autoComplete=\"off\"\n              maxLength={20}\n            />\n            {errors && <Notification title={errors.name} />}\n          </div>\n          <div className={styles.inputContainer}>\n            <label htmlFor={this.InputNuberId}>Number:</label>\n            <input\n              className={styles.input}\n              name=\"number\"\n              id={this.InputNuberId}\n              type=\"text\"\n              onChange={this.handleChange}\n              value={number}\n              autoComplete=\"off\"\n              maxLength={10}\n            />\n            {errors && <Notification title={errors.number} />}\n          </div>\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  addContact: propTypes.func.isRequired,\n  showNotification: propTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport { addContactAction } from '../../redux/actions';\nimport { toogleExistFlag } from '../../redux/operations';\nimport { getAllContacts } from '../../redux/selectors';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getAllContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: (name, number) => dispatch(addContactAction(name, number)),\n    showNotification: () => dispatch(toogleExistFlag()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { onExistFlagAction, offExistFlagAction } from './actions';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const toogleExistFlag = () => dispatch => {\n  dispatch(onExistFlagAction());\n\n  setTimeout(() => {\n    dispatch(offExistFlagAction());\n  }, 3000);\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\n\nconst ContactItem = ({ contactItem, onDeleteContact }) => {\n  const { name, number, id } = contactItem;\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.numberInfo}>\n        <span className={styles.name}>{name}</span>\n        <span>{number}</span>\n      </p>\n      <button className={styles.buttonDelete} onClick={() => onDeleteContact(id)} type=\"button\">\n        {null}\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contactItem: propTypes.shape({\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n    id: propTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: propTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { connect } from 'react-redux';\nimport ContactItem from './ContactItem';\n\nimport { deleteContactAction } from '../../redux/actions';\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContactAction(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from '../ContactItem/ContactItemContainer';\nimport styles from './ContactList.module.css';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst ContactList = ({ filteredContacts }) => {\n  return (\n    filteredContacts.length > 0 && (\n      <div className={styles.container}>\n        <h2 className={styles.title}>Contact list</h2>\n        <TransitionGroup component=\"ul\" className={styles.contactList}>\n          {filteredContacts.map(item => {\n            return (\n              <CSSTransition timeout={250} unmountOnExit classNames={slideTransition} key={item.id}>\n                <li className={styles.contactItem}>\n                  <ContactItem contactItem={item} />\n                </li>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </div>\n    )\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport ContactList from './ContactList';\nimport { getFilteredContacts } from '../../redux/selectors';\n\nconst mapStateToProps = state => {\n  return {\n    filteredContacts: getFilteredContacts(state),\n  };\n};\n\nexport default connect(mapStateToProps, null)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ hanleFilterChange }) => {\n  return (\n    <div className={styles.container}>\n      <h3 className={styles.title}>Find contacts by name:</h3>\n      <input\n        className={styles.input}\n        type=\"text\"\n        onChange={e => hanleFilterChange(e.currentTarget.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  hanleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport { changeFilterAction } from '../../redux/actions';\nimport Filter from './Filter';\n\nconst mapDispatchToProps = dispatch => ({\n  hanleFilterChange: filter => dispatch(changeFilterAction(filter)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import React, { useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeTransition from '../../transitions/fade.module.css';\nimport styles from './Header.module.css';\n\nconst Header = () => {\n  const [state, setstate] = useState({\n    isPageLoaded: false,\n  });\n\n  useEffect(() => {\n    setstate({ isPageLoaded: true });\n  }, []);\n\n  return (\n    <header className={styles.header}>\n      <CSSTransition in={state.isPageLoaded} timeout={500} classNames={fadeTransition}>\n        <h3 className={styles.title}>Phonebook</h3>\n      </CSSTransition>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './TabletShape.module.css';\n\nconst TabletShape = ({ children }) => {\n  return <div className={styles.screen}>{children}</div>;\n};\n\nexport default TabletShape;\n\nTabletShape.defaultProps = {\n  children: null,\n};\n\nTabletShape.propTypes = {\n  children: propTypes.node,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './PopUpNotification.module.css';\n\nconst popUpNotification = ({ title }) => (\n  <div className={styles.container}>\n    <p>{title}</p>\n  </div>\n);\n\npopUpNotification.propTypes = {\n  title: propTypes.string.isRequired,\n};\n\nexport default popUpNotification;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './ContactForm/ContactFormContainer';\nimport ContactList from './ContactList/ContactListContainer';\nimport Filter from './Filter/FilterContainer';\nimport Header from './Header/Header';\nimport TabletShape from './TabletShape/TabletShape';\nimport PopUpNotification from './PopUpNotification/PopUpNotification';\nimport slideTransition from '../transitions/slide.module.css';\nimport slideReverseTransition from '../transitions/slide-reverse.module.css';\n\nclass App extends Component {\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    const { loadContactsFromLS } = this.props;\n\n    if (persistedContacts) {\n      loadContactsFromLS(JSON.parse(persistedContacts));\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.props;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const { contacts, isAlreadyinContacts } = this.props;\n\n    return (\n      <TabletShape>\n        <Header />\n        <CSSTransition\n          in={isAlreadyinContacts}\n          timeout={250}\n          classNames={slideReverseTransition}\n          unmountOnExit\n        >\n          <PopUpNotification title=\"Contact already exist!\" />\n        </CSSTransition>\n\n        <ContactForm />\n        <CSSTransition\n          in={contacts.length > 1}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <Filter />\n        </CSSTransition>\n        <CSSTransition\n          in={contacts.length > 0}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <ContactList />\n        </CSSTransition>\n      </TabletShape>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      number: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n  isAlreadyinContacts: propTypes.bool.isRequired,\n  loadContactsFromLS: propTypes.func.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { loadPersistedContacts } from '../redux/actions';\nimport { getAllContacts, getExistContactFlag } from '../redux/selectors';\nimport App from './App';\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getAllContacts(state),\n    isAlreadyinContacts: getExistContactFlag(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadContactsFromLS: contacts => dispatch(loadPersistedContacts(contacts)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactAction,\n  deleteContactAction,\n  loadPersistedContacts,\n  changeFilterAction,\n  onExistFlagAction,\n  offExistFlagAction,\n} from './actions';\n\nconst initialStateContacts = {\n  contacts: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n};\n\nconst contactsReducer = createReducer(initialStateContacts, {\n  [addContactAction]: (state, action) => ({\n    ...state,\n    contacts: [...state.contacts, action.payload],\n  }),\n  [deleteContactAction]: (state, action) => ({\n    ...state,\n    contacts: state.contacts.filter(contact => contact.id !== action.payload),\n  }),\n  [loadPersistedContacts]: (state, action) => ({ ...state, contacts: action.payload }),\n  [changeFilterAction]: (state, action) => ({ ...state, filter: action.payload }),\n});\n\nconst notificationState = { isContactAlreadyExist: false };\nconst notificationReducer = createReducer(notificationState, {\n  [onExistFlagAction]: state => ({ ...state, isContactAlreadyExist: true }),\n  [offExistFlagAction]: state => ({ ...state, isContactAlreadyExist: false }),\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  notification: notificationReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\nconst middlewares = [ReduxThunk];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares,\n  devTools: true,\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/AppContainer';\nimport store from './redux/store';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3I6sd\",\"title\":\"Filter_title__2qWmY\",\"container\":\"Filter_container__1-wBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__1HjsM\",\"header\":\"Header_header__1OoyB\"};"],"sourceRoot":""}